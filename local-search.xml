<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>紀錄學習-使用Hexo架設部落格 (4) 使用OpenAI輔助總結與網址</title>
    <link href="/2024/07/seo-friendly-url-name-for-blog-post:-%E5%AD%B8%E7%BF%92-%E4%BD%BF%E7%94%A8-hexo-%E6%9E%B6%E8%A8%AD%E9%83%A8%E8%90%BD%E6%A0%BC-4-%E4%BD%BF%E7%94%A8-openai-%E8%BC%94%E5%8A%A9%E7%B8%BD%E7%B5%90%E8%88%87%E7%B6%B2%E5%9D%80-hexo-python-ai/"/>
    <url>/2024/07/seo-friendly-url-name-for-blog-post:-%E5%AD%B8%E7%BF%92-%E4%BD%BF%E7%94%A8-hexo-%E6%9E%B6%E8%A8%AD%E9%83%A8%E8%90%BD%E6%A0%BC-4-%E4%BD%BF%E7%94%A8-openai-%E8%BC%94%E5%8A%A9%E7%B8%BD%E7%B5%90%E8%88%87%E7%B6%B2%E5%9D%80-hexo-python-ai/</url>
    
    <content type="html"><![CDATA[<p>使用Hexo架設部落格後，本來只是想簡單紀錄教學與日常。但總會想到一些問題來折騰自己。</p><p>趁颱風天，測試使用OpenAI 的API，做了兩件事情：一為用OpenAI撰寫整篇文章的總結，一為調整文章網址</p><p>都為了增加網站的SEO，也為了自己的好玩拉，有沒有做沒什麼差。</p><h2 id="用OpenAI撰寫整篇文章的總結"><a href="#用OpenAI撰寫整篇文章的總結" class="headerlink" title="用OpenAI撰寫整篇文章的總結"></a>用OpenAI撰寫整篇文章的總結</h2><p>想法是「寫完文章後」→「Python與OpenAI API總結文章」→「generate的時候用JS加入到文章的excerpt中」</p><ul><li>Python與OpenAI API總結文章</li></ul><p>以下是Python程式碼， 路徑為<code>./source/_scripts/summarize_post.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> openai<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><br>openai.api_key = <span class="hljs-string">&#x27;API KEY&#x27;</span><br><br>def summarize_post(post_content):<br>    response = openai.ChatCompletion.<span class="hljs-keyword">create</span>(<br>        model=&quot;gpt-3.5-turbo&quot;,<br>        messages=[<br>            &#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;你是一個能夠摘要部落格文章的有幫助助手。&quot;&#125;,<br>            &#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: f&quot;請將以下文章摘要成70個字，用有趣、大眾能懂的口吻，用繁體中文總結：\n\n&#123;post_content&#125;&quot;&#125;<br>        ]<br>    )<br>    <span class="hljs-keyword">return</span> response[<span class="hljs-string">&#x27;choices&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;message&#x27;</span>][<span class="hljs-string">&#x27;content&#x27;</span>].strip()<br><br><span class="hljs-keyword">if</span> __name__ == &quot;__main__&quot;:<br>    post_content = sys.argv[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">summary</span> = summarize_post(post_content)<br>    print(<span class="hljs-keyword">summary</span>)<br><br></code></pre></td></tr></table></figure><ul><li>generate的時候用JS加入到文章的excerpt中</li></ul><p>JS程式碼，路徑放在<code>./scripts/generate_summary.js</code> </p><p>透過<code>execSync</code>執行前面的Python檔案取得<code>data.summary</code></p><p>也是在做讀檔寫檔（還好有GPT）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; execSync &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;child_process&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> yaml = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;js-yaml&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><br><span class="hljs-comment">// 模拟的数据对象</span><br><span class="hljs-comment">// const data = &#123;</span><br><span class="hljs-comment">//     title: &#x27;Example Post&#x27;,</span><br><span class="hljs-comment">//     full_source: path.join(__dirname, &#x27;../source/_posts/貓貓測試.md&#x27;),</span><br><span class="hljs-comment">//     content: fs.readFileSync(path.join(__dirname, &#x27;../source/_posts/貓貓測試.md&#x27;), &#x27;utf8&#x27;)</span><br><span class="hljs-comment">// &#125;;</span><br><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;before_post_render&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Processing post: <span class="hljs-subst">$&#123;data.title&#125;</span>`</span>); <span class="hljs-comment">// 日志输出</span><br><br>    <span class="hljs-comment">// 检查是否已有摘要</span><br>    <span class="hljs-keyword">if</span> (data.<span class="hljs-property">summary</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Summary already exists for post: <span class="hljs-subst">$&#123;data.title&#125;</span>`</span>);<br>        <span class="hljs-keyword">return</span> data;<br>    &#125;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">const</span> content = data.<span class="hljs-property">content</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/&lt;[^&gt;]*&gt;/g</span>, <span class="hljs-string">&#x27;&#x27;</span>); <span class="hljs-comment">// 移除 HTML 标签</span><br>        <span class="hljs-keyword">const</span> scriptPath = path.<span class="hljs-title function_">join</span>(hexo.<span class="hljs-property">base_dir</span>, <span class="hljs-string">&#x27;source/_scripts/summarize_post.py&#x27;</span>);<br>        <span class="hljs-keyword">const</span> summary = <span class="hljs-title function_">execSync</span>(<span class="hljs-string">`python3 <span class="hljs-subst">$&#123;scriptPath&#125;</span> &quot;<span class="hljs-subst">$&#123;content&#125;</span>&quot;`</span>).<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">trim</span>();<br>        data.<span class="hljs-property">summary</span> = summary;<br><br>        <span class="hljs-comment">// 读取文章的 Front Matter</span><br>        <span class="hljs-keyword">const</span> filePath = data.<span class="hljs-property">full_source</span>;<br>        <span class="hljs-keyword">const</span> fileContent = fs.<span class="hljs-title function_">readFileSync</span>(filePath, <span class="hljs-string">&#x27;utf8&#x27;</span>);<br>        <span class="hljs-keyword">const</span> postParts = fileContent.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;---&#x27;</span>);<br><br>        <span class="hljs-keyword">if</span> (postParts.<span class="hljs-property">length</span> &gt; <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">// 更新 Front Matter</span><br>            <span class="hljs-keyword">let</span> frontMatter = yaml.<span class="hljs-title function_">load</span>(postParts[<span class="hljs-number">1</span>]);<br>            <span class="hljs-keyword">if</span> (!frontMatter) &#123;<br>                frontMatter = &#123;&#125;;<br>            &#125;<br>            frontMatter.<span class="hljs-property">summary</span> = summary;<br>            <span class="hljs-keyword">const</span> newFrontMatter = yaml.<span class="hljs-title function_">dump</span>(frontMatter);<br><br>            <span class="hljs-comment">// 写回文件</span><br>            <span class="hljs-keyword">const</span> newFileContent = <span class="hljs-string">`---\n<span class="hljs-subst">$&#123;newFrontMatter&#125;</span>---\n<span class="hljs-subst">$&#123;postParts.slice(<span class="hljs-number">2</span>).join(<span class="hljs-string">&#x27;---&#x27;</span>)&#125;</span>`</span>;<br>            fs.<span class="hljs-title function_">writeFileSync</span>(filePath, newFileContent, <span class="hljs-string">&#x27;utf8&#x27;</span>);<br><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Summary generated and saved for post: <span class="hljs-subst">$&#123;data.title&#125;</span>`</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`Error: Invalid Front Matter format in post: <span class="hljs-subst">$&#123;data.title&#125;</span>`</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`Error generating summary for post: <span class="hljs-subst">$&#123;data.title&#125;</span>`</span>, error);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> data;<br>&#125;);<br></code></pre></td></tr></table></figure><p>在主題中的post要加入這個函式，路徑為<code>./themes/fluid/layout/post.ejs</code> ，如果還沒產生總結，就開一個區塊來放。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 程式片段，要加入的地方從&lt;article&gt; 後面開始 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-content mx-auto&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;seo-header&quot;</span>&gt;</span><br>                                &lt;%= page.subtitle || page.title %&gt;<br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>                            <span class="hljs-comment">&lt;!-- 改動開始：顯示文章摘要 --&gt;</span><br>                            &lt;% if (page.summary) &#123; %&gt;<br>                                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-summary&quot;</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                                        &lt;%= page.summary %&gt;<br>                                    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                                &lt;% &#125; %&gt;<br>                                    <span class="hljs-comment">&lt;!-- 改動結束 --&gt;</span><br><span class="hljs-comment">&lt;!-- ....... --&gt;</span><br>                                    <br></code></pre></td></tr></table></figure><h2 id="用OpenAI調整網址幫助SEO與美觀"><a href="#用OpenAI調整網址幫助SEO與美觀" class="headerlink" title="用OpenAI調整網址幫助SEO與美觀"></a>用OpenAI調整網址幫助SEO與美觀</h2><p>這邊是了一陣子發現網址(permalink)的設定，在<code>_config.yml</code>中預設為</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">permalink:</span> <span class="hljs-symbol">:year/</span><span class="hljs-symbol">:month/</span><span class="hljs-symbol">:day/</span><span class="hljs-symbol">:title</span><br></code></pre></td></tr></table></figure><p>可參考文件：<a href="https://hexo.io/zh-tw/docs/permalinks">https://hexo.io/zh-tw/docs/permalinks</a></p><p>但因為title都是中文，也不能直接寫<code>permalink: 字串</code> 這點我給差評</p><p>解法是下載<code>hexo-abbrlink</code> 這個外掛</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-abbrlink <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然後修改permalink為</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">permalink:</span> <span class="hljs-symbol">:year/</span><span class="hljs-symbol">:month/</span><span class="hljs-symbol">:abbrlink</span><br></code></pre></td></tr></table></figure><p>再做meta-data的修改即可，修改方式如下</p><p>因為這是後來與Notion同步時寫的，所以寫在Python當中，路徑為<code>./main.py</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> openai<br>openai.api_key = <span class="hljs-string">&#x27;API KEY&#x27;</span><br><br><span class="hljs-comment"># Generate SEO-friendly URL name using OpenAI</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_seo_url_name</span>(<span class="hljs-params">title, tags</span>):<br>    prompt = <span class="hljs-string">f&quot;Generate a SEO-friendly URL name for a blog post with the title &#x27;<span class="hljs-subst">&#123;title&#125;</span>&#x27; and tags &#x27;<span class="hljs-subst">&#123;tags&#125;</span>&#x27;:&quot;</span><br>    <span class="hljs-comment"># Call OpenAI API to get a response</span><br>    response = openai.ChatCompletion.create(<br>        model=<span class="hljs-string">&quot;gpt-3.5-turbo&quot;</span>,  <span class="hljs-comment"># You can use &quot;gpt-4&quot; if available</span><br>        messages=[<br>            &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;system&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;You are an assistant that generates SEO-friendly URL slugs.&quot;</span>&#125;,<br>            &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: prompt&#125;<br>        ]<br>    )<br><br>    <span class="hljs-comment"># Extract the generated slug from the response</span><br>    slug = response[<span class="hljs-string">&#x27;choices&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;message&#x27;</span>][<span class="hljs-string">&#x27;content&#x27;</span>].strip()<br>    <br>    <span class="hljs-comment"># Ensure the slug is URL-friendly by replacing spaces with hyphens and converting to lowercase</span><br>    slug = slug.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;-&quot;</span>).lower()<br><br>    <span class="hljs-keyword">return</span> slug<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert_to_markdown</span>(<span class="hljs-params">title, date, tags, categories, index_img_path, blocks, post_dir,url_name</span>):<br>    <span class="hljs-comment"># Add metadata</span><br>    markdown = <span class="hljs-string">f&quot;---\ntitle: <span class="hljs-subst">&#123;title&#125;</span>\ndate: <span class="hljs-subst">&#123;date&#125;</span>\ntags: [<span class="hljs-subst">&#123;tags&#125;</span>]\ncategories: <span class="hljs-subst">&#123;categories&#125;</span>\nindex_img: <span class="hljs-subst">&#123;index_img_path&#125;</span>\nbanner_img: <span class="hljs-subst">&#123;index_img_path&#125;</span>\nabbrlink: <span class="hljs-subst">&#123;url_name&#125;</span>\n---\n\n&quot;</span><br>    <span class="hljs-comment">#...</span><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br><span class="hljs-comment">#...</span><br>url_name = generate_seo_url_name(title, tags)<br>markdown_content = convert_to_markdown(title, date, tags, categories, index_img_path, blocks, post_dir, url_name)<br><span class="hljs-comment">#...</span><br><br></code></pre></td></tr></table></figure><p>以上為兩個AI輔助的功能，目前使用3.5-turbo，因為很便宜，測試時狂摳猛摳，大概50次只要0.02美。</p>]]></content>
    
    
    <categories>
      
      <category>部落格建置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>python</tag>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紀錄學習-使用Hexo架設部落格 (3)</title>
    <link href="/2024/07/seo-friendly-url-name-for-blog-post-title-jilu-xuexi-shiyong-hexo-jiashe-buluoge-tags-hexo-python-zidonghua/"/>
    <url>/2024/07/seo-friendly-url-name-for-blog-post-title-jilu-xuexi-shiyong-hexo-jiashe-buluoge-tags-hexo-python-zidonghua/</url>
    
    <content type="html"><![CDATA[<h2 id="Notion寫作，Hexo展示，實現寫部落格自由"><a href="#Notion寫作，Hexo展示，實現寫部落格自由" class="headerlink" title="Notion寫作，Hexo展示，實現寫部落格自由"></a>Notion寫作，Hexo展示，實現寫部落格自由</h2><h3 id="1-在Hexo展示部落格的優點"><a href="#1-在Hexo展示部落格的優點" class="headerlink" title="1. 在Hexo展示部落格的優點"></a>1. 在Hexo展示部落格的優點</h3><p>Hexo是一個基於Node.js的快速、簡單且高效的靜態部落格框架，擁有以下幾個優點：</p><ul><li><p>高效性能：Hexo生成的網站是靜態的，速度非常快，對伺服器的負載也很小。</p></li><li><p>高度靈活：Hexo支援多種主題和插件，可以輕鬆自訂部落格的外觀和功能。</p></li><li><p>容易部署：只需要幾個指令就能將部落格部署到GitHub Pages、Netlify等平台。</p></li><li><p>Markdown支援：Hexo完全支援Markdown語法，寫作體驗流暢。</p></li></ul><p>最喜歡的還是Theme很簡潔跟支援Markdown，同時又想保留一點自有空間，所以沒選擇HackMD</p><h3 id="2-用Hexo寫作的困難點"><a href="#2-用Hexo寫作的困難點" class="headerlink" title="2. 用Hexo寫作的困難點"></a>2. 用Hexo寫作的困難點</h3><p>最大的困難也最討厭的是「割裂感」，以純用VS Code來寫作來說，要先處理圖片，儲存後再貼連結到文章內，在寫作過程中頻繁切換導致思緒不連貫，非常阿雜。</p><p>所有想說是否能使用能夠整合多個功能的平台或工具，減少在不同應用程式之間切換的需求。第一個想到的就是本來就很常使用的Notion</p><p>Google一下的確也有人類似這樣做過：<a href="https://github.com/kaedea/notion-down">https://github.com/kaedea/notion-down</a></p><h3 id="3-用Notion寫作的優點"><a href="#3-用Notion寫作的優點" class="headerlink" title="3. 用Notion寫作的優點"></a>3. 用Notion寫作的優點</h3><p>Notion是一個功能強大的筆記和知識管理工具，支援同步以外，最方便是用複製就可以把圖片給快速貼上，已經用了三四年了。</p><h3 id="4-在Notion中展示部落格的困難點"><a href="#4-在Notion中展示部落格的困難點" class="headerlink" title="4. 在Notion中展示部落格的困難點"></a>4. 在Notion中展示部落格的困難點</h3><p>雖然Notion是一個強大的工具，但將其用作部落格平台仍存在一些挑戰：</p><ul><li><p>缺乏自訂選項：Notion的外觀和佈局選項較少，無法像Hexo那樣自由定制。</p></li><li><p>SEO限制：使用Notion公開分享頁面時，SEO效果較差，不利於搜尋引擎優化。</p></li><li><p>URL結構：Notion生成的URL較為複雜，不如Hexo的靜態網址友好。</p></li></ul><p>除此之外，如果要讓Notion轉成Markdown來匯入Hexo還是有點麻煩</p><h3 id="5-在Notion中轉換Markdown的麻煩點"><a href="#5-在Notion中轉換Markdown的麻煩點" class="headerlink" title="5. 在Notion中轉換Markdown的麻煩點"></a>5. 在Notion中轉換Markdown的麻煩點</h3><p>在Notion中寫作時，將筆記轉換為Markdown格式可能會遇到以下問題：</p><ul><li>圖片處理：Notion中的圖片需要額外處理，才能正確顯示在Hexo中。</li></ul><h3 id="6-利用Python進行轉換與自動化"><a href="#6-利用Python進行轉換與自動化" class="headerlink" title="6. 利用Python進行轉換與自動化"></a>6. 利用Python進行轉換與自動化</h3><p>因此，我解決的步驟的流程如下：</p><ul><li><p>參考了一個寫部落格的範本，資料庫分成幾類，最重要是「正在寫」、「待發佈」、「已發佈」。要推上去的文章放在待發佈。</p></li><li><p>文章裡面包含寫部落格的各種meta-data比如：tags、categories…</p></li><li><p>範本連結如下：<br><a href="https://alu1006.notion.site/b33fff93cf744bc9917edd7e4199ace3?v=54c0a75c6d3647a0a16ed107da398ac0&pvs=4">https://alu1006.notion.site/b33fff93cf744bc9917edd7e4199ace3?v=54c0a75c6d3647a0a16ed107da398ac0&amp;pvs=4</a></p></li><li><p>寫完後利用python 搭配 Notion API取出md檔，將檔案與圖片放到hexo的位置後，將文章移到「已發佈」</p></li><li><p>程式碼如下：<br><a href="https://github.com/alu1006/notion2hexo/blob/main/main.py">https://github.com/alu1006/notion2hexo/blob/main/main.py</a></p></li><li><p>目前是手動 Hexo g d</p></li></ul><h3 id="7-下一步…"><a href="#7-下一步…" class="headerlink" title="7. 下一步…"></a>7. 下一步…</h3><p>也不用手動，寫完可以自動就上傳…但對github action還在研究中</p><p>折騰半天，如果有用的話，幫我github按個讚，得到小快樂！</p><p><img src="/bfc21f95-dcef-4ea9-84bd-7f7b2c765f33.webp" alt="Image"></p>]]></content>
    
    
    <categories>
      
      <category>部落格建置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>python</tag>
      
      <tag>自動化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>河內五天四夜</title>
    <link href="/2024/07/seo-friendly-url-name-for-a-blog-post%E6%B2%B3%E5%85%A7%E4%BA%94%E5%A4%A9%E5%9B%9B%E5%A4%9C-%E8%B6%8A%E5%8D%97/"/>
    <url>/2024/07/seo-friendly-url-name-for-a-blog-post%E6%B2%B3%E5%85%A7%E4%BA%94%E5%A4%A9%E5%9B%9B%E5%A4%9C-%E8%B6%8A%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="第一天記事"><a href="#第一天記事" class="headerlink" title="第一天記事"></a>第一天記事</h2><ul><li><p>機場的假Grab司機很令人難忘，衝過來問你是不是叫了Grab？要仔細看車牌</p></li><li><p>還是有收費站，但不知道是不是高速公路，速限90，人均速70</p></li><li><p>有很多暗巷、洋式建築，聽說老城區是古蹟，所以不能拆改</p></li><li><p>不要聽信在地人的餐廳推薦，真的很普(New Day)</p></li><li><p>河內理髮店還蠻多，剪髮小哥跌斷手，還是給我表演單手抓髮蠟，露出一臉花式魔手，一邊抓的沾沾自喜，是可以嘗試一下，大概就是日式威廉等級</p></li><li><p>人力車之所以乘客在前面，聽說是高官出巡，車夫在前面會擋住視線，也會聞到他的汗臭。現在應該是要撞死先拿乘客去擋的概念</p></li><li><p>大概有三百家咖啡店，店門口都會放椅子，店面幾乎都會有陽台</p></li><li><p>Movitas是推薦的咖啡店</p></li><li><p>甜點吃了杏仁豆腐、龍眼的混合甜湯，其實還算不錯，但第一天不敢亂吃太多，怕接下來不用玩了</p></li><li><p>36古街說是有百工聚集之處，有點像香港，同條街上賣同樣的東西。最有趣的是，河內無時無刻都在按喇叭，但有條街，幾乎沒有喇叭聲，賣靈骨塔和遺像。</p></li><li><p>高中也正在放暑假，不知放到什麼時候</p></li><li><p>越南人沒有金紙桶，但是會隨地燒紙錢，紙錢包含了金紙，也有美金</p></li><li><p>火車街詐騙是最讓人不爽的，景點特色是火車離兩旁的房子非常的近，經過時幾乎車子會貼到臉上。但只有店家帶你進去探親友才能進去，不然會被警察趕走。先跟你講火車大約七點會來，大約等一個小時。七點沒來再說七點半…最後等到快九點。隔壁快點滿六杯啤酒了</p></li><li><p>晚上喝在地的甘蔗汁，超級甜，難喝不在話下，但只要十元</p></li></ul><h2 id="第二天記事"><a href="#第二天記事" class="headerlink" title="第二天記事"></a>第二天記事</h2><ul><li><p>還劍湖五天大概經過五次，可以不用排的景點（可以買票去湖中心看看），這裡流行帶著相機，說免費幫你拍照，最後是不是免費就不得而知了</p></li><li><p>可以的話一定要試試看機車Grab，體驗當地人的騎車方式，會突然覺得台灣很美好</p></li><li><p>河內的機車，通常沒有後視鏡，更多的是只有左邊的後視鏡，不知是什麼樣的狀況</p></li><li><p>好想搭搭看越南的火車（奇怪的願望），坐到任一個下一站</p></li><li><p>文廟像是赤崁樓加上孔廟的結合，越南的香比較特別，會做成燒了不會化成灰，而是讓香變得捲曲，聽說捲得越長越捲，越有福氣的意思</p></li><li><p>教堂可以去看看，當地人居多，歐美人反而不太去的感覺</p></li></ul><h2 id="第三天記事"><a href="#第三天記事" class="headerlink" title="第三天記事"></a>第三天記事</h2><ul><li><p>下龍灣找了當地的旅行社(Lily)，一樣有強制到觀光工廠逛街的行程，會說司機大哥也需要休息，在這邊休息一個小時喔</p></li><li><p>最好還是排平日去，下龍灣的每個島都非常熱門，甚至有個島，全程都是排隊在觀看的（是說導遊會自己抄近路，儘管U型的步道用紅龍圍住）</p></li><li><p>用腳開船的船長、水上有房子是水上的居民、超廣的鐘乳石洞、船上的海鮮很新鮮，以上都是可以到此一遊的理由</p></li><li><p>有個沙灘外國人和本地人在踢足球，看起來很是有趣。那天晚上幾乎每間店都在放足球比賽，足球應該是國球？</p></li></ul><h2 id="第四天記事"><a href="#第四天記事" class="headerlink" title="第四天記事"></a>第四天記事</h2><ul><li><p>牛肉河粉一定要加油條！吸了湯汁的油條超級好吃，有些店的油條是免費的。</p></li><li><p>牛肉河粉的價格從30~70都有，越在地越便宜</p></li><li><p>椰子咖啡很好喝</p></li><li><p>店員穿拖鞋是常態，回中壢看到的店員好像也是</p></li><li><p>有越南版的周傳雄「黃昏」</p></li><li><p>多聊天很容易被招待，被招待了蛋咖啡（蛋咖啡類似提拉米蘇加上黑咖啡）</p></li><li><p>在書店弄掉手機，差點嚇到出尿，還好掉在椅子上，還沒有人撿走</p></li><li><p>當地的便當店，沒吃到有點可惜</p></li><li><p>越南也有貓咪咖啡店，但是貓咪跟店員都不太想理人</p></li><li><p>鎮國寺是放方丈的色利子，也有點像高雄的龍虎塔，建議可以不用去</p></li><li><p>可以去當地的爵士酒吧看看，每週會有不同的活動，遇到了跳社交舞的一天。Remote工作的美國哥，一邊用中文一邊用英文與我瞎聊，覺得會跳舞，去學一下好像也蠻好玩的？</p></li></ul><h2 id="第五天記事"><a href="#第五天記事" class="headerlink" title="第五天記事"></a>第五天記事</h2><ul><li><p>越南人好像很不能接受鈔票是破掉的，但在我一番請求拜託，還是收下了。順帶一提，在中壢吃越南河粉，剛好鈔票也是破掉的，店員是也是不收的喔</p></li><li><p>免稅店的咖啡是五倍價格，但我還是喝了</p></li></ul><p><img src="/2024/07/seo-friendly-url-name-for-a-blog-post%E6%B2%B3%E5%85%A7%E4%BA%94%E5%A4%A9%E5%9B%9B%E5%A4%9C-%E8%B6%8A%E5%8D%97/ac581f1b-0790-4017-8cae-d25c83ab669f.webp" alt="Image"></p>]]></content>
    
    
    <categories>
      
      <category>旅遊</category>
      
    </categories>
    
    
    <tags>
      
      <tag>越南</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紀錄學習-使用Hexo架設部落格 (2)</title>
    <link href="/2024/06/seo-friendly-url-name-for-blog-post-jilu-xuexi-shiyong-hexo-jiashe-boluoge-2-hexo-github-blog/"/>
    <url>/2024/06/seo-friendly-url-name-for-blog-post-jilu-xuexi-shiyong-hexo-jiashe-boluoge-2-hexo-github-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="熱力圖發文貢獻日誌"><a href="#熱力圖發文貢獻日誌" class="headerlink" title="熱力圖發文貢獻日誌"></a>熱力圖發文貢獻日誌</h1><p>在使用Hexo進行部落格管理時，我們可以通過配置熱力圖的功能，來顯示每月的發文狀況。這對於監控自己的寫作進度和保持穩定的更新頻率非常有幫助。</p><p>其實只是單純自己看自己爽而已。</p><h2 id="使用套件-ECharts"><a href="#使用套件-ECharts" class="headerlink" title="使用套件-ECharts"></a>使用套件-ECharts</h2><p>使用ECharts，ECharts是一個由百度開發的開源可視化圖表庫。適合用來生成各種動態、互動性強的數據可視化圖表。</p><p>包含折線圖、柱狀圖、餅圖、散點圖、地圖等多種圖表類型…當然包含今日的主角熱力圖。</p><p>參考：<a href="https://echarts.apache.org/examples/en/editor.html?c=calendar-charts">https://echarts.apache.org/examples/en/editor.html?c=calendar-charts</a></p><p>匯入ECharts庫：可以通過CDN方式，也可以下載ECharts後本地端匯入。在本例中，我們使用CDN方式引入ECharts：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/cungudafa/cdn/js/echarts.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>接著進行配置吧</p><h2 id="第一步-設置熱力圖發文貢獻日誌開關"><a href="#第一步-設置熱力圖發文貢獻日誌開關" class="headerlink" title="第一步-設置熱力圖發文貢獻日誌開關"></a>第一步-設置熱力圖發文貢獻日誌開關</h2><p>透過修改根目錄中的<code>_config.yml</code>文件來開啟或關閉這個功能。具體步驟如下：</p><ol><li><p>打開Hexo部落格的根目錄，找到並打開<code>_config.yml</code>文件。</p></li><li><p>添加或修改以下設置：</p></li></ol><h2 id="第二步-在主題內設置貢獻日誌"><a href="#第二步-在主題內設置貢獻日誌" class="headerlink" title="第二步-在主題內設置貢獻日誌"></a>第二步-在主題內設置貢獻日誌</h2><p>為了在主題中顯示貢獻日誌，修改主題內的<code>index.ejs</code>文件。以Fluid主題為例，我們需要進行以下操作：</p><ol><li><p>打開主題目錄中的<code>index.ejs</code>文件，通常路徑為<code>themes/fluid/layout/index.ejs</code>。</p></li><li><p>在文件的最下方添加以下代碼：</p></li></ol><p>這樣設定之後，如果在<code>_config.yml</code>中啟用了<code>postCalendar</code>，就會在首頁底部顯示貢獻日誌。</p><h2 id="第三步-設置貢獻日誌的樣式和功能"><a href="#第三步-設置貢獻日誌的樣式和功能" class="headerlink" title="第三步-設置貢獻日誌的樣式和功能"></a>第三步-設置貢獻日誌的樣式和功能</h2><p>我們還需要在<code>layout/_widget/post-calendar.ejs</code>文件中添加以下程式碼，以確保貢獻日誌的樣式和功能正常：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container archive-calendar&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;post-calendar&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-id">#post-calendar</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">225px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">12px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.5</span>);</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/cungudafa/cdn/js/echarts.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> myChart = echarts.<span class="hljs-title function_">init</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;post-calendar&#x27;</span>));</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &lt;%</span><br><span class="language-javascript">    <span class="hljs-comment">// calculate range.</span></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> startDate = <span class="hljs-title function_">moment</span>().<span class="hljs-title function_">subtract</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;years&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> endDate = <span class="hljs-title function_">moment</span>();</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> rangeArr = <span class="hljs-string">&#x27;[&quot;&#x27;</span> + startDate.<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>) + <span class="hljs-string">&#x27;&quot;, &quot;&#x27;</span> + endDate.<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>) + <span class="hljs-string">&#x27;&quot;]&#x27;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// post and count map.</span></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> dateMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();</span><br><span class="language-javascript">    site.<span class="hljs-property">posts</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">post</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> date = post.<span class="hljs-property">date</span>.<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> count = dateMap.<span class="hljs-title function_">get</span>(date);</span><br><span class="language-javascript">        dateMap.<span class="hljs-title function_">set</span>(date, count == <span class="hljs-literal">null</span> || count == <span class="hljs-literal">undefined</span> ? <span class="hljs-number">1</span> : count + <span class="hljs-number">1</span>);</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// loop the data for the current year, generating the number of post per day.</span></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> datePosts = <span class="hljs-string">&#x27;[&#x27;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> dayTime = <span class="hljs-number">3600</span> * <span class="hljs-number">24</span> * <span class="hljs-number">1000</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> time = startDate; time &lt;= endDate; time += dayTime) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> date = <span class="hljs-title function_">moment</span>(time).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD&#x27;</span>);</span><br><span class="language-javascript">        datePosts = (i === <span class="hljs-number">0</span> ? datePosts + <span class="hljs-string">&#x27;[&quot;&#x27;</span> : datePosts + <span class="hljs-string">&#x27;, [&quot;&#x27;</span>) + date + <span class="hljs-string">&#x27;&quot;, &#x27;</span> + (dateMap.<span class="hljs-title function_">has</span>(date) ? dateMap.<span class="hljs-title function_">get</span>(date) : <span class="hljs-number">0</span>) + <span class="hljs-string">&#x27;]&#x27;</span>;</span><br><span class="language-javascript">        i++;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    datePosts += <span class="hljs-string">&#x27;]&#x27;</span>;%&gt;</span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> option = &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">title</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;文章熱力圖&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">left</span>: <span class="hljs-string">&#x27;center&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">textStyle</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#3C4858&#x27;</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">tooltip</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">padding</span>: <span class="hljs-number">10</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;#555&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">borderColor</span>: <span class="hljs-string">&#x27;#777&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">borderWidth</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">formatter</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> value = obj.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div style=&quot;font-size: 14px;&quot;&gt;&#x27;</span> + value[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;: &#x27;</span> + value[<span class="hljs-number">1</span>] + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">visualMap</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">showLabel</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">categories</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">calculable</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">inRange</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;rect&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">color</span>: [<span class="hljs-string">&#x27;#ebedf0&#x27;</span>, <span class="hljs-string">&#x27;#c6e48b&#x27;</span>, <span class="hljs-string">&#x27;#7bc96f&#x27;</span>, <span class="hljs-string">&#x27;#239a3b&#x27;</span>, <span class="hljs-string">&#x27;#196127&#x27;</span>]</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">itemWidth</span>: <span class="hljs-number">12</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">itemHeight</span>: <span class="hljs-number">12</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">orient</span>: <span class="hljs-string">&#x27;horizontal&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">left</span>: <span class="hljs-string">&#x27;center&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">bottom</span>: <span class="hljs-number">0</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">calendar</span>: [&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">left</span>: <span class="hljs-string">&#x27;center&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">range</span>: &lt;%- rangeArr %&gt;,</span><br><span class="language-javascript">            <span class="hljs-attr">cellSize</span>: [<span class="hljs-number">13</span>, <span class="hljs-number">13</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">splitLine</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">itemStyle</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;1.88679%&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">height</span>: <span class="hljs-string">&#x27;15px&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#EEEEEE&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">borderColor</span>: <span class="hljs-string">&#x27;#FFF&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">borderWidth</span>: <span class="hljs-number">2</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">yearLabel</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">monthLabel</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">nameMap</span>: <span class="hljs-string">&#x27;cn&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">fontWeight</span>: <span class="hljs-string">&#x27;lighter&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">fontSize</span>: <span class="hljs-number">12</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">dayLabel</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">formatter</span>: <span class="hljs-string">&#x27;&#123;start&#125; 1st&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">fontWeight</span>: <span class="hljs-string">&#x27;lighter&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">nameMap</span>: [<span class="hljs-string">&#x27;日&#x27;</span>, <span class="hljs-string">&#x27;一&#x27;</span>, <span class="hljs-string">&#x27;二&#x27;</span>, <span class="hljs-string">&#x27;三&#x27;</span>, <span class="hljs-string">&#x27;四&#x27;</span>, <span class="hljs-string">&#x27;五&#x27;</span>, <span class="hljs-string">&#x27;六&#x27;</span>],</span><br><span class="language-javascript">                <span class="hljs-attr">fontSize</span>: <span class="hljs-number">12</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;],</span><br><span class="language-javascript">        <span class="hljs-attr">series</span>: [&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;heatmap&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">coordinateSystem</span>: <span class="hljs-string">&#x27;calendar&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">calendarIndex</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &lt;%- datePosts %&gt;</span><br><span class="language-javascript">        &#125;]</span><br><span class="language-javascript">    &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    myChart.<span class="hljs-title function_">setOption</span>(option);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="/c91559c5-3957-4d78-a939-e1deb1a53cea.webp" alt="Image"></p><p>參考文章：<a href="https://blog.csdn.net/cungudafa/article/details/106420842">https://blog.csdn.net/cungudafa/article/details/106420842</a></p>]]></content>
    
    
    <categories>
      
      <category>部落格建置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紀錄學習-使用Hexo架設部落格 (1) 使用Github Page從無到有</title>
    <link href="/2021/12/seo-friendly-url-name-for-blog-post-=-&#39;how-to-set-up-hexo-blog-with-github-page-for-beginners-notion-hexo-blog&#39;/"/>
    <url>/2021/12/seo-friendly-url-name-for-blog-post-=-&#39;how-to-set-up-hexo-blog-with-github-page-for-beginners-notion-hexo-blog&#39;/</url>
    
    <content type="html"><![CDATA[<h2 id="話說在前"><a href="#話說在前" class="headerlink" title="話說在前"></a>話說在前</h2><p>以前一直都用Wordpress來紀錄，但功能實在太多了，有時想要一個簡潔的版面、程式碼的呈現設定等等都蠻麻煩的（抱頭）。</p><p>後來發現Notion後，編輯排版都用markdown來做，非常方便。加上現在Notion AI 在編輯上如虎添翼，連要打的字都變少了。</p><p>身為教師，還是希望自己的學能轉成教，能放上網路上就有機會幫助到人，又不用花自己太多時間的前提下，剛好看到了Hexo這個工具，跳進來使用看看。</p><p>網路教學很多，幾個目標先在開始前做個文章主要總整：</p><ul><li><p>使用Github Page免費架站</p></li><li><p>使用客製化的網址</p></li><li><p>使用Google Ads和Google Analysis，做廣告獎勵與追蹤</p></li><li><p>使用Notion編輯，加速部落格文章管理與撰寫</p></li><li><p>利用Github action自動完成CI&#x2F;CD，減少不必要動作</p></li></ul><h2 id="什麼是Hexo"><a href="#什麼是Hexo" class="headerlink" title="什麼是Hexo"></a>什麼是Hexo</h2><ul><li><p>Hexo是一個快速、簡單且強大的靜態部落格框架</p></li><li><p>支援使用Markdown（或其他模板語言）來編寫內容</p></li><li><p>支援一鍵佈屬</p></li></ul><p>基本流程如下： 設定開發環境→在本地端設定Hexo→設定基本內容→客製主題→上線</p><h2 id="設定開發環境"><a href="#設定開發環境" class="headerlink" title="設定開發環境"></a>設定開發環境</h2><ol><li><p>Node.js</p></li><li><p>Git</p></li><li><p>Visual Studio Code</p></li></ol><h2 id="Hexo初始設定"><a href="#Hexo初始設定" class="headerlink" title="Hexo初始設定"></a>Hexo初始設定</h2><p>Node.js 是一個開源的 JavaScript 執行環境，它包含了 npm（Node Package Manager）這個套件管理工具。</p><p>所以下載安裝Node.js完後可以使用 npm 來安裝和管理你的 JavaScript 套件了。</p><ol><li><p>在你的本地計算機上安裝Hexo，你可以通過運行以下命令安裝：</p></li><li><p>創建一個新的Hexo Blog，運行以下命令：</p></li></ol><h2 id="設定基本內容"><a href="#設定基本內容" class="headerlink" title="設定基本內容"></a>設定基本內容</h2><p>先記錄一下初始化後的幾個後修改的，資料夾架構：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _posts</span><br><span class="hljs-string">|   └── .gitkeep</span><br>└── themes<br><br><br></code></pre></td></tr></table></figure><ul><li><p><code>_config.yml</code>: Hexo的主要配置文件，包含了部落格的設定信息，如標題、語言、主題等。</p></li><li><p><code>scaffolds</code>: 存放預設的文章範本，當你創建新文章時可以使用這些範本。</p></li><li><p><code>source</code>: 存放所有的文章內容，包括草稿(<code>_drafts</code>)和已發佈(<code>_posts</code>)的文章。</p></li><li><p><code>themes</code>: 存放部落格的主題文件，可以根據需求選擇不同的主題來美化部落格的外觀。</p></li></ul><p>設定步驟</p><ol><li>打開 _config.yml (為最外層總網站的配置)，修改網站基本資訊</li></ol><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment"># Site</span><br><span class="hljs-attribute">title</span>: 阿盧老師Coding嚕<br><span class="hljs-attribute">subtitle</span>: 程式、新興科技、教育<br><span class="hljs-attribute">description</span>: &#x27;&#x27; <span class="hljs-comment">#用於SEO</span><br><span class="hljs-attribute">keywords</span>: <span class="hljs-comment">#用於SEO</span><br><span class="hljs-attribute">author</span>: 阿盧<br><span class="hljs-attribute">language</span>: zh-TW<br><span class="hljs-attribute">timezone</span>: &#x27;Asia/Taipei&#x27;<br><br></code></pre></td></tr></table></figure><h2 id="挑選想要的主題-以Fluid為例（可以未來再處理）"><a href="#挑選想要的主題-以Fluid為例（可以未來再處理）" class="headerlink" title="挑選想要的主題-以Fluid為例（可以未來再處理）"></a>挑選想要的主題-以Fluid為例（可以未來再處理）</h2><p>主題(Themes)在官方，可從此處挑選： <a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a></p><p>有人整理了比較紅的主題，比較多建置教學，也比較多中文教學</p><p><a href="https://github.com/FoxerLee/awesome-hexo-themes">https://github.com/FoxerLee/awesome-hexo-themes</a></p><p>挑選完後，我以fluid(<a href="https://github.com/fluid-dev/hexo-theme-fluid)%E7%82%BA%E4%B8%BB%EF%BC%9A">https://github.com/fluid-dev/hexo-theme-fluid)為主：</a></p><ol><li>切進資料夾中的themes目錄</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog\\themes<br><br></code></pre></td></tr></table></figure><ol><li>透過clone的方式將主題複製到資料夾中</li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">&lt;https</span>://github.com/fluid-dev/hexo-theme-fluid.git&gt;<br><br></code></pre></td></tr></table></figure><aside> 💡 themes/fluid/_config.yml:設定主題相關，在剛開始不要和最外層的_config.yml搞混了</aside><ol><li>修改總站的_config.yml，對應到fluid這個主題</li></ol><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: &lt;https:<span class="hljs-comment">//hexo.io/plugins/&gt;</span><br>## Themes: &lt;https:<span class="hljs-comment">//hexo.io/themes/&gt;</span><br>theme: fluid<br><br></code></pre></td></tr></table></figure><ol><li><p>修改themes&#x2F;fluid&#x2F;_config.yml，可參考用戶手冊： <a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">https://fluid-dev.github.io/hexo-fluid-docs/guide/#关于指南</a></p></li><li><p>用以下指令確定，在本地端測試是否成功</p></li></ol><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo clean <span class="hljs-comment">//清除快取</span><br>hexo g <span class="hljs-comment">//生成靜態檔案</span><br>hexo s <span class="hljs-comment">//啟動local端伺服器</span><br><br></code></pre></td></tr></table></figure><h2 id="設定Github-Page並上線"><a href="#設定Github-Page並上線" class="headerlink" title="設定Github Page並上線"></a>設定Github Page並上線</h2><ol><li><p>在 Github官網上建立一個新的 Repository，Repository 名稱為 <code>&lt;你的使用者名稱&gt;.github.io</code>，例如 <code>johnsmith.github.io</code>。</p></li><li><p>在本地端，進入 Hexo Blog 資料夾，修改 <code>_config.yml</code> 檔案。</p></li><li><p>安裝部署相關的套件，執行以下指令。</p></li><li><p>部署 Hexo Blog 到 GitHub Page，執行以下指令。</p></li><li><p>在瀏覽器中開啟 <code>&lt;你的使用者名稱&gt;.github.io</code>，你應該能夠看到你的 Hexo Blog 網站了。</p></li></ol><p><img src="/c14a94de-5189-4f30-91c5-2bc4b04bf478.webp" alt="Image"></p><p><img src="/60700493-7457-432a-880e-83fe1ad95aa5.webp" alt="Image"></p>]]></content>
    
    
    <categories>
      
      <category>部落格建置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
      <tag>notion</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
